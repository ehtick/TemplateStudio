name: $(Date:yyyyMMdd)$(Rev:.r)

trigger: none

pr: none

schedules:
- cron: 0 5 * * 6
  branches:
    include:
    - dev
    - release

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/dev

jobs:
- job:
  displayName: OneByOne WinUI
  timeoutInMinutes: 4000
  cancelTimeoutInMinutes: 1

  strategy:
    matrix:
      Analyze:
        BuildConfiguration: Analyze
        BuildPlatform: Any CPU

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: nuget restore
    inputs:
      solution: code/Test.sln
      selectOrConfig: config
      nugetConfigPath: code/CoreTemplateStudio/code/Nuget.Config

  - task: VSBuild@1
    displayName: Build code/Test.sln
    inputs:
      solution: code/Test.sln
      vsVersion: 16.0
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: PowerShell@1
    displayName: Run Template Tests (OneByOne WinUI)
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)\.nuget\packages\xunit.runner.console\2.4.1\tools\net47\xunit.console.exe -testLibrary $(Build.SourcesDirectory)\Code\test\Templates.Test\bin\$(BuildConfiguration)\Microsoft.Templates.Test.dll -traits  'ExecutionSet=BuildOneByOneMVVMToolkitWinUI' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: Publish Test Results **\TEST-*.xml
    continueOnError: True
    inputs:
      testRunner: XUnit
      testResultsFiles: '**\TEST-*.xml'

- job:
  displayName: OneByOne WPF
  timeoutInMinutes: 4000

  strategy:
    matrix:
      Analyze:
        BuildConfiguration: Analyze
        BuildPlatform: Any CPU

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: nuget restore
    inputs:
      solution: code/Test.sln
      selectOrConfig: config
      nugetConfigPath: code/CoreTemplateStudio/code/Nuget.Config

  - task: VSBuild@1
    displayName: Build code/Test.sln
    inputs:
      solution: code/Test.sln
      vsVersion: 16.0
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: PowerShell@1
    displayName: Run Template Tests (OneByOne WPF)
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)\.nuget\packages\xunit.runner.console\2.4.1\tools\net47\xunit.console.exe -testLibrary $(Build.SourcesDirectory)\Code\test\Templates.Test\bin\$(BuildConfiguration)\Microsoft.Templates.Test.dll -traits  'ExecutionSet=BuildOneByOneCodeBehindWpf', 'ExecutionSet=BuildOneByOneMVVMBasicWpf', 'ExecutionSet=BuildOneByOneMVVMToolkitWpf','ExecutionSet=BuildOneByOneMVVMLightWpf', 'ExecutionSet=BuildOneByOnePrismWpf' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **\TEST-*.xml'
    continueOnError: True
    inputs:
      testRunner: XUnit
      testResultsFiles: '**\TEST-*.xml'

- job: 
  displayName: OneByOne UWP
  timeoutInMinutes: 4000

  strategy:
    matrix:
      Analyze:
        BuildConfiguration: Analyze
        BuildPlatform: Any CPU

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    inputs:
      checkLatest: true

  - task: NuGetCommand@2
    displayName: nuget restore
    inputs:
      solution: code/Test.sln
      selectOrConfig: config
      nugetConfigPath: code/CoreTemplateStudio/code/Nuget.Config

  - task: VSBuild@1
    displayName: Build code/Test.sln
    inputs:
      solution: code/Test.sln
      vsVersion: 16.0
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)

  - task: BatchScript@1
    displayName: Set Agent Drive and Clean Test Folder
    inputs:
      filename: _build/SetAgentDriveAndCleanTestFolder.bat
      modifyEnvironment: true

  - task: PowerShell@1
    displayName: Run Template Tests (OneByOne UWP 1)
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)\.nuget\packages\xunit.runner.console\2.4.1\tools\net47\xunit.console.exe -testLibrary $(Build.SourcesDirectory)\Code\test\Templates.Test\bin\$(BuildConfiguration)\Microsoft.Templates.Test.dll -traits  'ExecutionSet=BuildOneByOneCodeBehind', 'ExecutionSet=BuildOneByOneMVVMToolkit', 'ExecutionSet=BuildOneByOnePrism'  -outputDir $(Build.SourcesDirectory)

  - task: PowerShell@1
    displayName: 'Run Template Tests (OneByOne UWP 2)'
    inputs:
      scriptName: _build/ParallelTestExecution.ps1
      arguments: -testRunner $(UserProfile)\.nuget\packages\xunit.runner.console\2.4.1\tools\net47\xunit.console.exe -testLibrary $(Build.SourcesDirectory)\Code\test\Templates.Test\bin\$(BuildConfiguration)\Microsoft.Templates.Test.dll -traits 'ExecutionSet=BuildOneByOneCaliburnMicro',  'ExecutionSet=BuildOneByOneMVVMBasic', 'ExecutionSet=BuildOneByOneMVVMLight' -outputDir $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **\TEST-*.xml'
    continueOnError: True
    inputs:
      testRunner: XUnit
      testResultsFiles: '**\TEST-*.xml'