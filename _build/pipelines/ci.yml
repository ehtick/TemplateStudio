name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
    - dev
    - release
  batch: True

pr: none

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/dev

strategy:
  matrix:
    Analyze:
      BuildConfiguration: Analyze
      BuildPlatform: Any CPU
    Release:
      BuildConfiguration: Release
      BuildPlatform: Any CPU
    
pool:
  vmImage: windows-2022

steps:
- checkout: self
  clean: true
  submodules: recursive

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet'
  inputs:
    checkLatest: true

- task: NuGetCommand@2
  displayName: nuget restore
  inputs:
    solution: Code/Big.sln
    selectOrConfig: config
    nugetConfigPath: code/CoreTemplateStudio/code/Nuget.Config
    noCache: true

- task: VSBuild@1
  displayName: Build code/Big.sln
  inputs:
    solution: Code/Big.sln
    vsVersion: 16.0
    msbuildArgs: /p:DeployExtension=false
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)
    clean: true

- task: DotNetCoreCLI@2
  displayName: Run Core Tests
  inputs:
    command: test
    projects: '**\code\CoreTemplateStudio\code\test\CoreTemplateStudio.Core.Test'
    arguments: --logger:trx --configuration $(BuildConfiguration)
    testRunTitle: Core Tests

- task: DotNetCoreCLI@2
  displayName: Run VSTemplate Tests
  inputs:
    command: test
    projects: '**\code\test\VsTemplates.Test'
    arguments: --logger:trx --configuration $(BuildConfiguration)
    testRunTitle: VSTemplate Tests

- task: CmdLine@1
  displayName: Run Utilities Tests
  inputs:
    filename: $(UserProfile)\.nuget\packages\xunit.runner.console\2.4.1\tools\net47\xunit.console.exe
    arguments: 'code\CoreTemplateStudio\code\test\Utilities.Test\bin\$(BuildConfiguration)\Utilities.Test.dll  -xml $(Build.SourcesDirectory)\TEST-Utilities-Result.xml  -parallel none '

- task: CmdLine@1
  displayName: Run LocalizationTool Verify
  inputs:
    filename: $(Build.SourcesDirectory)\code\tools\Localization\bin\$(BuildConfiguration)\Localization.exe
    arguments: verify -s $(Build.SourcesDirectory)
    failOnStandardError: true

- task: CopyFiles@1
  displayName: 'Copy Files to $(Build.ArtifactStagingDirectory)'
  condition: succeededOrFailed()
  inputs:
    SourceFolder: $(Build.SourcesDirectory)
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: $(Build.ArtifactStagingDirectory)
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'